services:
    sincro-minio:
        profiles:
            - full
            - backend
            - external
        image: ${SINCRO_REGISTRY_NAME}/minio:latest
        build:
            context: ..
            dockerfile: ./Docker/minio/Dockerfile
        ports:
            - 9000:9000/tcp
            - 9001:9001/tcp
        environment:
            - MINIO_ROOT_USER=${SINCRO_MINIO_ROOT_USER}
            - MINIO_ROOT_PASSWORD=${SINCRO_MINIO_ROOT_PASSWORD}
            - SINCRO_CONSUL_AGENT_HOST=consul-agent-minio
            - SINCRO_CONSUL_AGENT_PORT=8500
        volumes:
            - ../volumes/minio:/data
        command: /start-minio.sh
        networks:
            - sincromisor-net
        deploy:
            restart_policy:
                condition: any
                delay: 10s
        depends_on:
            consul-agent-minio:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "mc", "ready", "local"]
            interval: 5s
            timeout: 5s
            retries: 5

    consul-agent-minio:
        profiles:
            - full
            - backend
            - external
        image: hashicorp/consul:latest
        command:
            [
                "agent",
                "-retry-join=${SINCRO_CONSUL_SERVER_HOST}",
                "-client=0.0.0.0",
            ]
        volumes:
            - consul-agent-minio-data:/consul/data
        networks:
            - sincromisor-net
        deploy:
            restart_policy:
                condition: any
                delay: 10s
        healthcheck:
            test: ["CMD", "consul", "members"]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    consul-agent-minio-data:

networks:
    sincromisor-net:
