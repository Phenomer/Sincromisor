services:
  service-initializer:
    profiles:
      - full-service
      - without-webclient
      - webclient-only
      - backend
    build:
      context: .
      dockerfile: ./Docker/service-initializer/Dockerfile
    image: sincromisor/service-initializer
    volumes:
      - ./Docker/env_vars/config.yml:/opt/sincromisor/config.yml:rw
      - type: volume
        source: huggingface-cache
        target: /opt/sincromisor/.cache
        volume:
          nocopy: true
  speech-recognizer:
    profiles:
      - full-service
      - without-webclient
      - backend
    build:
      context: .
      dockerfile: ./Docker/speech-recognizer/Dockerfile
    image: sincromisor/speech-recognizer:latest
    ports:
      - 8004:8004/tcp
    volumes:
      - ./Docker/env_vars/config.yml:/opt/sincromisor/config.yml:ro
      - type: volume
        source: huggingface-cache
        target: /opt/sincromisor/.cache
        volume:
          nocopy: true
    networks:
      - sincromisor-net
    env_file:
      - ./Docker/env_vars/speech-recognizer.env
      - ./Docker/env_vars/redis.env
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    stdin_open: true
    tty: true
    depends_on:
      service-initializer:
        condition: service_completed_successfully
  sincro-rtc:
    profiles:
      - full-service
      - without-webclient
    build:
      context: .
      dockerfile: ./Docker/sincro-rtc/Dockerfile
    image: sincromisor/sincro-rtc:latest
    ports:
      - 8002:8002/tcp
    volumes:
      - ./Docker/env_vars/config.yml:/opt/sincromisor/config.yml:ro
    networks:
      - sincromisor-net
    env_file:
      - ./Docker/env_vars/sincro-rtc.env
      - ./Docker/env_vars/redis.env
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    depends_on:
      service-initializer:
        condition: service_completed_successfully

  speech-extractor:
    profiles:
      - full-service
      - without-webclient
      - backend
    build:
      context: .
      dockerfile: ./Docker/speech-extractor/Dockerfile
    image: sincromisor/speech-extractor:latest
    ports:
      - 8003:8003/tcp
    volumes:
      - ./Docker/env_vars/config.yml:/opt/sincromisor/config.yml:ro
    networks:
      - sincromisor-net
    env_file:
      - ./Docker/env_vars/speech-extractor.env
      - ./Docker/env_vars/redis.env
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    depends_on:
      service-initializer:
        condition: service_completed_successfully

  voice-synthesizer:
    profiles:
      - full-service
      - without-webclient
      - backend
    build:
      context: .
      dockerfile: ./Docker/voice-synthesizer/Dockerfile
    image: sincromisor/voice-synthesizer:latest
    ports:
      - 8005:8005/tcp
    volumes:
      - ./Docker/env_vars/config.yml:/opt/sincromisor/config.yml:ro
    networks:
      - sincromisor-net
    env_file:
      - ./Docker/env_vars/voice-synthesizer.env
      - ./Docker/env_vars/redis.env
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    depends_on:
      service-initializer:
        condition: service_completed_successfully

  sincro-client:
    profiles:
      - full-service
      - webclient-only
    build:
      context: .
      dockerfile: ./Docker/sincro-client/Dockerfile
    image: sincromisor/sincro-client:latest
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 443:443/udp
    volumes:
      - ./Docker/env_vars/config.yml:/opt/sincromisor/config.yml:ro
    networks:
      - sincromisor-net
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    depends_on:
      service-initializer:
        condition: service_completed_successfully

  sincro-voicevox:
    profiles:
      - full-service
      - without-webclient
      - backend
    image: sincromisor/voicevox:latest
    build:
      context: .
      dockerfile: ./Docker/voicevox/Dockerfile
    ports:
      - 50021:50021/tcp
    networks:
      - sincromisor-net
    deploy:
      restart_policy:
        condition: on-failure

  sincro-voice-cache:
    profiles:
      - full-service
      - without-webclient
      - backend
    image: sincromisor/voice-cache:latest
    build:
      context: .
      dockerfile: ./Docker/voice-cache/Dockerfile
    ports:
      - 6379:6379/tcp
    networks:
      - sincromisor-net
    deploy:
      restart_policy:
        condition: on-failure

networks:
  sincromisor-net:

volumes:
  huggingface-cache:
